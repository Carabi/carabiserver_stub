<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.3.1-b419 (branches/2.3.1.x-7937; 2014-08-04T08:11:03+0000) JAXWS-RI/2.2.10-b140803.1500 JAXWS-API/2.2.11 JAXB-RI/2.2.10-b140802.1033 JAXB-API/2.2.12-b140109.1041 svn-revision#unknown. --><xs:schema xmlns:tns="http://soap.server.carabi.ru/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://soap.server.carabi.ru/">

<xs:element name="CarabiException" type="tns:CarabiException"/>

<xs:element name="deleteMessages" type="tns:deleteMessages"/>

<xs:element name="deleteMessagesResponse" type="tns:deleteMessagesResponse"/>

<xs:element name="fireUserState" type="tns:fireUserState"/>

<xs:element name="fireUserStateResponse" type="tns:fireUserStateResponse"/>

<xs:element name="forwardMessage" type="tns:forwardMessage"/>

<xs:element name="forwardMessageResponse" type="tns:forwardMessageResponse"/>

<xs:element name="getContact" type="tns:getContact"/>

<xs:element name="getContactList" type="tns:getContactList"/>

<xs:element name="getContactListResponse" type="tns:getContactListResponse"/>

<xs:element name="getContactResponse" type="tns:getContactResponse"/>

<xs:element name="getDialog" type="tns:getDialog"/>

<xs:element name="getDialogResponse" type="tns:getDialogResponse"/>

<xs:element name="getLastInterlocutors" type="tns:getLastInterlocutors"/>

<xs:element name="getLastInterlocutorsResponse" type="tns:getLastInterlocutorsResponse"/>

<xs:element name="getMessage" type="tns:getMessage"/>

<xs:element name="getMessageAttachement" type="tns:getMessageAttachement"/>

<xs:element name="getMessageAttachementResponse" type="tns:getMessageAttachementResponse"/>

<xs:element name="getMessageDetails" type="tns:getMessageDetails"/>

<xs:element name="getMessageDetailsResponse" type="tns:getMessageDetailsResponse"/>

<xs:element name="getMessageResponse" type="tns:getMessageResponse"/>

<xs:element name="getRelatedUsersList" type="tns:getRelatedUsersList"/>

<xs:element name="getRelatedUsersListResponse" type="tns:getRelatedUsersListResponse"/>

<xs:element name="getUnreadMessagesCount" type="tns:getUnreadMessagesCount"/>

<xs:element name="getUnreadMessagesCountResponse" type="tns:getUnreadMessagesCountResponse"/>

<xs:element name="getUnreadMessagesSenders" type="tns:getUnreadMessagesSenders"/>

<xs:element name="getUnreadMessagesSendersDetailed" type="tns:getUnreadMessagesSendersDetailed"/>

<xs:element name="getUnreadMessagesSendersDetailedResponse" type="tns:getUnreadMessagesSendersDetailedResponse"/>

<xs:element name="getUnreadMessagesSendersResponse" type="tns:getUnreadMessagesSendersResponse"/>

<xs:element name="markRead" type="tns:markRead"/>

<xs:element name="markReadPrevios" type="tns:markReadPrevios"/>

<xs:element name="markReadPreviosResponse" type="tns:markReadPreviosResponse"/>

<xs:element name="markReadResponse" type="tns:markReadResponse"/>

<xs:element name="markReceived" type="tns:markReceived"/>

<xs:element name="markReceivedResponse" type="tns:markReceivedResponse"/>

<xs:element name="prepareToForward" type="tns:prepareToForward"/>

<xs:element name="prepareToForwardResponse" type="tns:prepareToForwardResponse"/>

<xs:element name="putMessage" type="tns:putMessage"/>

<xs:element name="putMessageResponse" type="tns:putMessageResponse"/>

<xs:element name="readAllMessages" type="tns:readAllMessages"/>

<xs:element name="readAllMessagesResponse" type="tns:readAllMessagesResponse"/>

<xs:element name="readMessagesGroup" type="tns:readMessagesGroup"/>

<xs:element name="readMessagesGroupResponse" type="tns:readMessagesGroupResponse"/>

<xs:element name="replicateExtendedMessage" type="tns:replicateExtendedMessage"/>

<xs:element name="replicateExtendedMessageResponse" type="tns:replicateExtendedMessageResponse"/>

<xs:element name="replicateMessage" type="tns:replicateMessage"/>

<xs:element name="replicateMessageResponse" type="tns:replicateMessageResponse"/>

<xs:element name="sendExtendedMessage" type="tns:sendExtendedMessage"/>

<xs:element name="sendExtendedMessageResponse" type="tns:sendExtendedMessageResponse"/>

<xs:element name="sendMessage" type="tns:sendMessage"/>

<xs:element name="sendMessageResponse" type="tns:sendMessageResponse"/>

<xs:element name="writeToMessageGroup" type="tns:writeToMessageGroup"/>

<xs:element name="writeToMessageGroupResponse" type="tns:writeToMessageGroupResponse"/>

<xs:complexType name="sendMessage">
<xs:sequence>
<xs:element name="tokenSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="sendMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="CarabiException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessage">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messageId" type="xs:long" minOccurs="0"/>
<xs:element name="read" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getContactList">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="department" type="xs:string" minOccurs="0"/>
<xs:element name="search" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getContactListResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="replicateMessage">
<xs:sequence>
<xs:element name="tokenServer" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="replicateMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="readAllMessages">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="readAllMessagesResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="markRead">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messagesList" type="xs:string" minOccurs="0"/>
<xs:element name="read" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="markReadResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="putMessage">
<xs:sequence>
<xs:element name="softwareToken" type="xs:string" minOccurs="0"/>
<xs:element name="loginOwner" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="receivedMessageId" type="xs:long" minOccurs="0"/>
<xs:element name="receivedMessageServerId" type="xs:int" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="attachmentId" type="xs:long" minOccurs="0"/>
<xs:element name="extensionTypeId" type="xs:int" minOccurs="0"/>
<xs:element name="extensionValue" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="putMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getUnreadMessagesSenders">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getUnreadMessagesSendersResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getContact">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="login" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getContactResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="prepareToForward">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="prepareToForwardResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRelatedUsersList">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="relations" type="xs:string" minOccurs="0"/>
<xs:element name="conjunction" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getRelatedUsersListResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="forwardMessage">
<xs:sequence>
<xs:element name="softwareToken" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="attachmentId" type="xs:long" minOccurs="0"/>
<xs:element name="extensionTypeId" type="xs:int" minOccurs="0"/>
<xs:element name="extensionValue" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="forwardMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="readMessagesGroup">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messagesGroupSysname" type="xs:string" minOccurs="0"/>
<xs:element name="afterDate" type="xs:string" minOccurs="0"/>
<xs:element name="search" type="xs:string" minOccurs="0"/>
<xs:element name="crop" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="readMessagesGroupResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessageDetails">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messageId" type="xs:long" minOccurs="0"/>
<xs:element name="read" type="xs:boolean"/>
<xs:element name="crop" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessageDetailsResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="writeToMessageGroup">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messagesGroupSysname" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="writeToMessageGroupResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="sendExtendedMessage">
<xs:sequence>
<xs:element name="tokenSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="extensionType" type="xs:string" minOccurs="0"/>
<xs:element name="extensionValue" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="sendExtendedMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getDialog">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="interlocutor" type="xs:string" minOccurs="0"/>
<xs:element name="afterDate" type="xs:string" minOccurs="0"/>
<xs:element name="search" type="xs:string" minOccurs="0"/>
<xs:element name="crop" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getDialogResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getUnreadMessagesSendersDetailed">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getUnreadMessagesSendersDetailedResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteMessages">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messagesList" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="deleteMessagesResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getLastInterlocutors">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="size" type="xs:int"/>
<xs:element name="afterDate" type="xs:string" minOccurs="0"/>
<xs:element name="search" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getLastInterlocutorsResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="markReadPrevios">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="timestamp" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="markReadPreviosResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="fireUserState">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="online" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="fireUserStateResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="replicateExtendedMessage">
<xs:sequence>
<xs:element name="tokenServer" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messageText" type="xs:string" minOccurs="0"/>
<xs:element name="extensionTypeId" type="xs:string" minOccurs="0"/>
<xs:element name="extensionValue" type="xs:string" minOccurs="0"/>
<xs:element name="markRead" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="replicateExtendedMessageResponse">
<xs:sequence>
<xs:element name="return" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessageAttachement">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
<xs:element name="messageId" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getMessageAttachementResponse">
<xs:sequence>
<xs:element name="return" type="tns:fileOnServer" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="fileOnServer">
<xs:complexContent>
<xs:extension base="tns:abstractEntity">
<xs:sequence>
<xs:element name="contentAddress" type="xs:string" minOccurs="0"/>
<xs:element name="contentLength" type="xs:long" minOccurs="0"/>
<xs:element name="id" type="xs:long" minOccurs="0"/>
<xs:element name="mimeType" type="xs:string" minOccurs="0"/>
<xs:element name="name" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>

<xs:complexType name="abstractEntity" abstract="true">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="getUnreadMessagesCount">
<xs:sequence>
<xs:element name="token" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="getUnreadMessagesCountResponse">
<xs:sequence>
<xs:element name="return" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="markReceived">
<xs:sequence>
<xs:element name="softwareToken" type="xs:string" minOccurs="0"/>
<xs:element name="loginSender" type="xs:string" minOccurs="0"/>
<xs:element name="loginReceiver" type="xs:string" minOccurs="0"/>
<xs:element name="messagesList" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="markReceivedResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
</xs:schema>